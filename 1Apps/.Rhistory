x=rnorm(50)
z<-(x=rnorm(50))
install.packages("tidyverse")
library(tidyverse)
library(dplyr)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("rmarkdown")
install.packages("rmarkdown")
library(rmarkdown)
install.packages("shiny")
install.packages("rsconnect")
install.packages("dashboard")
install.packages("flexdashboard")
install.packages("shinythemes")
library(shinythemes)
view(shinytheme())
view(cosmos)
shinyapp(ui=ui, server=server)
library(shiny)
library(name_UI &lt;- function(id) {
ns &lt;- NS(id)
tagList(
)
}
name &lt;- function(input, output, session) {
})
#define UI
ui &lt;- fluidpage(theme = shinytheme(&quot;cerulean&quot;), navbarpage(&quot;1st app&quot;
tabPanel(&quot;navbar 1&quot;,
sidebarPanel(tags$h3(&quot;input&quot;),
textInput(&quot;txt1&quot;, &quot;Given Name:&quot;, &quot;&quot;),
texteInput(&quot;txt2&quot;, &quot;Surname:&quot;,&quot;&quot;),
),
#siderPanel
mainPanel(h1(&quot;Header 1&quot;),
h4(&quot;Output 1&quot;),
verbatimTexteOutput(&quot;textout&quot;),
)
#Mainpanel
#navbar 1 , tabpanel
tabPanel(&quot;navbar2&quot;,&quot;intentional blank&quot;),
tabPanel(&quot;navbar3&quot;, &quot;intentional blank&quot;),
)
#navabar
)#fluidPage
#define Sever
server &lt;- function(input, output){
output$txtout &lt;-renderText({paste(input$txt1, input$txt2, sep = &quot;&quot;)})
}#server
#creat shiny object
shinyapp(ui=ui, server=server)
library(shiny)
library(name_UI &lt;- function(id) {
ns &lt;- NS(id)
tagList(
)
}
name &lt;- function(input, output, session) {
})
#define UI
ui &lt;- fluidpage(theme = shinytheme(&quot;cerulean&quot;), navbarpage(&quot;1st app&quot;
tabPanel(&quot;navbar 1&quot;,
sidebarPanel(tags$h3(&quot;input&quot;),
textInput(&quot;txt1&quot;, &quot;Given Name:&quot;, &quot;&quot;),
texteInput(&quot;txt2&quot;, &quot;Surname:&quot;,&quot;&quot;),
),
#siderPanel
mainPanel(h1(&quot;Header 1&quot;),
h4(&quot;Output 1&quot;),
verbatimTexteOutput(&quot;textout&quot;),
)
#Mainpanel
#navbar 1 , tabpanel
tabPanel(&quot;navbar2&quot;,&quot;intentional blank&quot;),
tabPanel(&quot;navbar3&quot;, &quot;intentional blank&quot;),
)
#navabar
)#fluidPage
#define Sever
server &lt;- function(input, output){
output$txtout &lt;-renderText({paste(input$txt1, input$txt2, sep = &quot;&quot;)})
}#server
#creat shiny object
shinyapp(ui=ui, server=server)
## get the active dataset and show the first few observations
.get_data() %>%
head()
## access a dataset
diamonds %>%
select(price, clarity) %>%
head()
## add a variable to the diamonds data
diamonds <- mutate(diamonds, log_price = log(price))
## show the first observations in the price and log_price columns
diamonds %>%
select(price, log_price) %>%
head()
## create a histogram of prices
diamonds %>%
ggplot(aes(x = price)) +
geom_histogram()
## and a histogram of log-prices using radiant.data::visualize
visualize(diamonds, xvar = "log_price", custom = TRUE)
## open help in the R-studio viewer from Radiant
# help(package = "radiant.data")
## If you are familiar with Shiny you can call reactives when the code
## is evaluated inside a Shiny app. For example, if you transformed
## some variables in Data > Transform you can call the transform_main
## reacive to see the latest result. Very useful for debugging
# transform_main() %>% head()
## get the active dataset and show the first few observations
.get_data() %>%
head()
## access a dataset
diamonds %>%
select(price, clarity) %>%
head()
## add a variable to the diamonds data
diamonds <- mutate(diamonds, log_price = log(price))
## show the first observations in the price and log_price columns
diamonds %>%
select(price, log_price) %>%
head()
## create a histogram of prices
diamonds %>%
ggplot(aes(x = price)) +
geom_histogram()
## and a histogram of log-prices using radiant.data::visualize
visualize(diamonds, xvar = "log_price", custom = TRUE)
## open help in the R-studio viewer from Radiant
# help(package = "radiant.data")
## If you are familiar with Shiny you can call reactives when the code
## is evaluated inside a Shiny app. For example, if you transformed
## some variables in Data > Transform you can call the transform_main
## reacive to see the latest result. Very useful for debugging
# transform_main() %>% head()
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
# Define UI
ui <- fluidPage(theme = shinytheme("cosmo"),
navbarPage(
# theme = "cerulean",  # <--- To use a theme, uncomment this
"My first app",
tabPanel("Navbar 1",
sidebarPanel(
tags$h3("Input:"),
textInput("txt1", "Given Name:", ""),
textInput("txt2", "Surname:", ""),
), # sidebarPanel
mainPanel(
h1("Header 1"),
h4("Output 1"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
) # navbarPage
) # fluidPage
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
# Define UI
ui <- fluidPage(theme = shinytheme("lumen"),
navbarPage(
# theme = "cosmo",  # <--- To use a theme, uncomment this
"Evolution de la croissance Economique mondiale",
tabPanel("Economie",
sidebarPanel(
tags$h3("Le PIB des Pays/le monde:"),
textInput("txt1", "Pays", ""),
textInput("txt2", "Annee:", ""),
), # sidebarPanel
mainPanel(
h1("Resultat"),
h4("Output 1"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Navbar 2", "This panel is intentionally left blank"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
) # navbarPage
) # fluidPage
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
runApp('Desktop/Apps Web')
library(shiny)
setwd("~/Desktop/Apps Web")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
detach("package:shiny" , unload = TRUE)
library(shiny)
setwd("~/Desktop/Apps Web")
setwd("~/Desktop/Apps Web")
setwd("/Desktop/Apps Web/1stApp")
setwd("~/Desktop/Apps Web/1Apps")
runApp()
detach("package:shiny" , unload = TRUE)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shinyUI(
pageWithSidebar(
headerPanel("1st Apps"),
sidebarPanel(
selectInput( "Distrubution", "please select distrubution type",
choices=c("Normal", "Exponential")),
sliderInput("sampleSize", "Please select sample size: ",
min=100, max=5000, value=1000, step=100),
conditionalPanel(condition = "input.Distrubution == 'Normal'",
textInput("Mean", "please select the mean", 10),
textInput("sd",  "please select Standard Deviation", 3)),
conditionalPanel(condition = "input.Distrubution == 'Exponential'",
textInput("lamba", "Please select exponential Lamba:", 1 ))
),
mainPanel(
textInput("Mean", "please select the mean", 10),runApp()
plotOutput("myPlot")
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
####################################
# Data Professor                   #
# http://youtube.com/dataprofessor #
# http://github.com/dataprofessor  #
####################################
# Modified from Winston Chang,
# https://shiny.rstudio.com/gallery/shiny-theme-selector.html
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
# Define UI
ui <- fluidPage(theme = shinytheme("simplex"),
navbarPage(
# theme = "cosmo",  # <--- To use a theme, uncomment this
"Evolution de la croissance Economique mondiale",
tabPanel("Economie",
sidebarPanel(
tags$h3("Le PIB des Pays/le monde:"),
textInput("txt1", "Pays", ""),
textInput("txt2", "Annee:", ""),
), # sidebarPanel
mainPanel(
h2("Variation de la croissance Economique"),
h4("txtout"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Actualites", "           L'économie mondiale connaît un ralentissement synchronisé : la croissance a de nouveau été révisée à la baisse pour 2019, à 3 %, soit son rythme le plus lent depuis la crise financière mondiale. Il s'agit d'un sérieux recul par rapport aux 3,8 % de 2017, année où l'économie mondiale connaissait un redressement synchronisé. Le tassement de la croissance est la conséquence de l’augmentation des obstacles au commerce, de l'incertitude accrue qui entoure les échanges commerciaux et la situation géopolitique, de facteurs spécifiques qui causent des tensions macroéconomiques dans plusieurs pays émergents et de facteurs structurels, dont une faible productivité et un vieillissement de la population dans les pays avancés.
En 2020, la croissance mondiale devrait s'améliorer légèrement pour atteindre 3,4 %, ce qui correspond à une révision à la baisse de 0,2 % de nos projections d'avril. Toutefois, contrairement au ralentissement synchronisé, cette reprise n’est pas généralisée et est précaire. La croissance des pays avancés devrait ralentir pour s'établir à 1,7 % en 2019 et 2020, tandis que celle des pays émergents et des pays en développement devrait s'accélérer, passant de 3,9 % en 2019 à 4,6 % en 2020. Cette accélération s’explique pour moitié par une reprise ou une récession moins forte dans des pays émergents en difficulté, comme la Turquie, l'Argentine et l'Iran, et pour le reste par une reprise dans des pays où la croissance a considérablement ralenti en 2019 par rapport à 2018, comme l'Arabie saoudite, le Brésil, l'Inde, le Mexique et la Russie."),
tabPanel("Contact Us", "Tel: +509 332132
Email: widnerlafleur@gmail.com")
) # navbarPage
) # fluidPage
# Define server function
server <- function(input, output) {
output$txtout <- renderText({
paste( input$txt1, input$txt2, sep = " " )
})
} # server
# Create Shiny object
shinyApp(ui = ui, server = server)
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
setwd("~/Desktop/Apps Web")
setwd("~/Desktop/Apps Web")
croissance <- read.csv("Croissance eco.csv")
setwd("~/Desktop/Apps Web/Croissance eco")
setwd("~/Desktop/Apps Web/Croissance eco")
croissance <- read.csv("Data-Table 1.csv")
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
setwd("~/Desktop/Apps Web/1Apps")
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
library(shinythemes)
library(shinythemes)
shinytheme()
shinytheme(er)
# Define UI
ui <- fluidPage(theme = shinytheme("journ"),
navbarPage(
# theme = "cosmo",  # <--- To use a theme, uncomment this
"Evolution de la croissance Economique mondiale",
tabPanel("Economie",
sidebarPanel(
selectInput("Noms Des Pays", "Veuillez Saisir", choices = c(List)),
textInput("txt2", "Annee:", ""),
), # sidebarPanel
mainPanel(
h2("Variation de la croissance Economique"),
h4("txtout"),
verbatimTextOutput("txtout"),
) # mainPanel
), # Navbar 1, tabPanel
tabPanel("Actualites", "           L'économie mondiale connaît un ralentissement synchronisé : la croissance a de nouveau été révisée à la baisse pour 2019, à 3 %, soit son rythme le plus lent depuis la crise financière mondiale. Il s'agit d'un sérieux recul par rapport aux 3,8 % de 2017, année où l'économie mondiale connaissait un redressement synchronisé. Le tassement de la croissance est la conséquence de l’augmentation des obstacles au commerce, de l'incertitude accrue qui entoure les échanges commerciaux et la situation géopolitique, de facteurs spécifiques qui causent des tensions macroéconomiques dans plusieurs pays émergents et de facteurs structurels, dont une faible productivité et un vieillissement de la population dans les pays avancés.
En 2020, la croissance mondiale devrait s'améliorer légèrement pour atteindre 3,4 %, ce qui correspond à une révision à la baisse de 0,2 % de nos projections d'avril. Toutefois, contrairement au ralentissement synchronisé, cette reprise n’est pas généralisée et est précaire. La croissance des pays avancés devrait ralentir pour s'établir à 1,7 % en 2019 et 2020, tandis que celle des pays émergents et des pays en développement devrait s'accélérer, passant de 3,9 % en 2019 à 4,6 % en 2020. Cette accélération s’explique pour moitié par une reprise ou une récession moins forte dans des pays émergents en difficulté, comme la Turquie, l'Argentine et l'Iran, et pour le reste par une reprise dans des pays où la croissance a considérablement ralenti en 2019 par rapport à 2018, comme l'Arabie saoudite, le Brésil, l'Inde, le Mexique et la Russie."),
tabPanel("Contact Us", "Tel: +509 332132
Email: widnerlafleur@gmail.com")
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp()
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
setwd("~/Desktop/Apps Web")
runApp('application1.R')
setwd("~/Desktop/Apps Web/1Apps")
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp()
runApp()
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web/application1.R')
runApp('~/Desktop/Apps Web')
runApp()
runApp('~/Desktop/Apps Web')
runApp('~/Desktop/Apps Web')
runApp()
